services:
  mongodb:
    image: mongo:8.0.5
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=phucdang
      - MONGO_INITDB_ROOT_PASSWORD=phucdang01235
#    command: mongod  --port 27016
    volumes:
      - mongo:/data
    ports:
      - "27017:27017"
    networks:
      - mongo-network

  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://phucdang:phucdang01235@mongodb:27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=phucdang
      - ME_CONFIG_MONGODB_ADMINPASSWORD=phucdang012356
    ports:
      - 8079:8081
    networks:
      - mongo-network

  redis:
    image: redis:latest
    container_name: redis_session_store
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: kafka
    hostname: kafka0
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      CLUSTER_ID: 0pxjLnr_QEuwSQ3AOlsBNw
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093"
      KAFKA_LISTENERS: "CONTROLLER://kafka0:29093,LISTENER_BOB://kafka0:29092,LISTENER_FRED://localhost:9092"
      KAFKA_ADVERTISED_LISTENERS: "LISTENER_BOB://kafka0:29092,LISTENER_FRED://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_INTER_BROKER_LISTENER_NAME: "LISTENER_BOB"
      KAFKA_JMX_HOSTNAME: "localhost"
      KAFKA_JMX_PORT: 9101
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # Topic __consumer_offsets
#      KAFKA_LOG_DIRS: "/var/lib/kafka/data"
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#    volumes:
#      - /var/lib/kafka/data

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.9.0
    container_name: kafka-schema-registry
    hostname: schema-registry
#    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8885:8085"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka0:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8885
      SCHEMA_REGISTRY_DEBUG: true

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.9.0
    container_name: kafka-connect
    depends_on:
      - kafka
      - kafka-schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka0:29092
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-config
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8885
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8885
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
      - kafka-schema-registry
    ports:
      - "8880:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8885
#      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      DYNAMIC_CONFIG_ENABLED: true

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.4
    container_name: keycloak
    ports:
      - "9090:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    networks:
      - microservices-net
    command:
      - "start-dev"


networks:
  app-network:
    driver: bridge
  mongo-network:
    name: mongo-network
    driver: bridge
  microservices-net:
    name: microservices-net
    driver: bridge


volumes:
  mongo:
  postgres:
